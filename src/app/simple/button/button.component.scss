@import '../../../assets/scss/default.scss';
@import '../../../assets/scss/mixins/_buttons.scss';
.sim-btn {
    position: relative;
    display: inline-block;
    margin-bottom: 0;
    font-weight: 400;
    font-family: $font-family-base;
    text-align: center;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    background: none;
    border: 1px solid transparent;
    white-space: nowrap;
    user-select: none;
    transition: all .1s ease-in;
    &:before {
        position: absolute;
        top: -1px;
        left: -1px;
        bottom: -1px;
        right: -1px;
        background: #fff;
        opacity: .35;
        content: "";
        border-radius: inherit;
        z-index: 1;
        transition: opacity .2s;
        pointer-events: none;
        display: none;
    }
    .icon-loading {
        transition: margin-left .3s cubic-bezier(.645, .045, .355, 1);
        &+span{
            margin-left: .5em;
        }
    }

    &-loading:before {
        display: block;
    }

    &-loading:not(.sim-btn-dashed):not(.sim-btn-outline){
        padding-left: 29px;
        pointer-events: none;
        position: relative;
        .icon-loading{
            margin-left: -14px;
        }
    }
    &-dashed {
        border-style: dashed;
        &.sim-btn-default {
            @include button-variant-dashed($btn-default-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-primary {
            @include button-variant-dashed($primary-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-secondary {
            @include button-variant-dashed($secondary-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-info {
            @include button-variant-dashed($info-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-warning {
            @include button-variant-dashed($warning-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-success {
            @include button-variant-dashed($success-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-danger {
            @include button-variant-dashed($danger-color, $default-background-color, $default-border-color);
        }
    }
    &-outline {
        &.sim-btn-default {
            @include button-variant-outline($btn-default-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-primary {
            @include button-variant-outline($primary-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-secondary {
            @include button-variant-outline($secondary-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-info {
            @include button-variant-outline($info-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-warning {
            @include button-variant-outline($warning-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-success {
            @include button-variant-outline($success-color, $default-background-color, $default-border-color);
        }
        &.sim-btn-danger {
            @include button-variant-outline($danger-color, $default-background-color, $default-border-color);
        }
    }
    &-default {
        @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
    }
    &-primary{
        @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
    }
    &-secondary{
        @include button-variant($btn-secondary-color, $btn-secondary-bg, $btn-secondary-border);
    }
    &-info{
        @include button-variant($btn-info-color, $btn-info-bg, $btn-info-border);
    }
    &-warning {
        @include button-variant($btn-warning-color, $btn-warning-bg, $btn-warning-border);
    }
    &-success {
        @include button-variant($btn-success-color, $btn-success-bg, $btn-success-border);
    }
    &-danger {
        @include button-variant($btn-danger-color, $btn-danger-bg, $btn-danger-border);
    }
    &-link {
        @include button-variant-link($link-color);
    }
    &-block {
        display: block;
        width: 100%;
    }
    &-xl {
        @include button-size($btn-padding-xl, $font-size-xl, $line-height-xl, $border-radius-lg);
    }
    &-lg {
        @include button-size($btn-padding-lg, $font-size-lg, $line-height-lg, $border-radius-base);
    }
    &-md {
        @include button-size($btn-padding-md, $font-size-md, $line-height-md, $border-radius-base);
    }
    &-sm {
        @include button-size($btn-padding-sm, $font-size-sm, $line-height-sm, $border-radius-base);
    }
    &-xs {
        @include button-size($btn-padding-xs, $font-size-xs, $line-height-xs, $border-radius-sm);
    }
    &-pill {
        border-radius: 10rem;
    }
    &-circle {
        padding: 0;
        overflow: hidden;
        &.sim-btn {
            &-xl {
                @include button-size-circle($btn-circle-xl, 50%);
            }
            &-lg {
                @include button-size-circle($btn-circle-lg, 50%);
            }
            &-md {
                @include button-size-circle($btn-circle-md, 50%);
            }
            &-sm {
                @include button-size-circle($btn-circle-sm, 50%);
            }
            &-xs {
                @include button-size-circle($btn-circle-xs, 50%);
            }
        }
    }

    &-square {
        padding: 0;
        overflow: hidden;
        &.sim-btn {
            &-xl {
                @include button-size-circle($btn-circle-xl, $border-radius-lg);
            }
            &-lg {
                @include button-size-circle($btn-circle-lg, $border-radius-base);
            }
            &-md {
                @include button-size-circle($btn-circle-md, $border-radius-base);
            }
            &-sm {
                @include button-size-circle($btn-circle-sm, $border-radius-base);
            }
            &-xs {
                @include button-size-circle($btn-circle-xs, $border-radius-sm);
            }
        }
    }
}